particle_sampler = (num_p) -> { () ~> {
  extract_weight(infer_resampling(flip_coins, [5], constrain_coin_flipper_trace(5), num_p))
} };

rejection_sampler = () ~> {
  extract_weight(infer_reject(flip_coins, [5], constrain_coin_flipper_trace(5), 0))
};

ssrmh_sampler = (num_steps) -> { () ~> {
  extract_weight(infer_ssrmh(flip_coins, [5], constrain_coin_flipper_trace(5), num_steps))
} };

custom_rmh_sampler = (num_steps) -> { () ~> {
  t2 = T{};
  regenerate(flip_coins, [5], constrain_coin_flipper_trace(5), t2);
  beta_site = A/0/def/app/.;
  replicate(num_steps, () ~> {
    rmh_step(flip_coins, [5], constrain_coin_flipper_trace(5), t2, list(beta_site))
  });
  extract_weight(t2)
} };

rejection_p_p_plot = (num_samples, filename) ~> {
  p_p_plot_2samp_to_file(filename,
    replicate(num_samples, rejection_sampler),
    replicate(10 * num_samples, analytic_sampler))
};

particles_p_p_plot = (num_samples, num_particles, filename) ~> {
  p_p_plot_2samp_to_file(filename,
    replicate(num_samples, particle_sampler(num_particles)),
    replicate(10 * num_samples, analytic_sampler))
};

ssrmh_p_p_plot = (num_samples, num_steps, filename) ~> {
  p_p_plot_2samp_to_file(filename,
    replicate(num_samples, ssrmh_sampler(num_steps)),
    replicate(10 * num_samples, analytic_sampler))
};

custom_rmh_p_p_plot = (num_samples, num_steps, filename) ~> {
  p_p_plot_2samp_to_file(filename,
    replicate(num_samples, custom_rmh_sampler(num_steps)),
    replicate(10 * num_samples, analytic_sampler))
};

ss_vs_custom_rmh_p_p_plot = (num_samples, num_steps, filename) ~> {
  p_p_plot_2samp_to_file(filename,
    replicate(num_samples, ssrmh_sampler(num_steps)),
    replicate(num_samples, custom_rmh_sampler(num_steps)))
};

dump_analytic_samples = (num_samples) ~> {
  replicate(num_samples, () ~> {
    print(list(analytic_sampler()))
  })
};

dump_rejection_samples = (num_samples) ~> {
  replicate(num_samples, () ~> {
    print(list(rejection_sampler()))
  })
};

dump_particle_samples = (num_replicates, num_p) ~> {
  replicate(num_replicates, () ~> {
    print(infer_rolling_resample(
      flip_coins, [5], constrain_coin_flipper_trace(5),
      num_p, extract_weight))
  })
};

dump_mcmc_samples = (num_replicates, num_steps) ~> {
  replicate(num_replicates, () ~> {
    print(infer_mcmc(
      flip_coins, [5], constrain_coin_flipper_trace(5),
      num_steps, extract_weight))
  })
};
