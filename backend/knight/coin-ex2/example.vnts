flip_coins = (n) ~> {
  weight = beta(2, 2);
  replicate2(n, () ~> { flip(weight) })
};

constrain_coin_flipper_trace = (n) -> {
  t1 = T{};
  for_each((k) -> { t1[1, creation_point(replicate2), k, 0, "flip"] := true },
    range(5));
  t1
};

extract_weight = (mechanism) -> {
  @mechanism[0, "def", "beta"]
};

analytic_sampler = () ~> {
  beta(7, 2)
};
