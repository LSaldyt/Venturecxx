flip_coins = (n) ~> {
  weight = beta(1, 1);
  replicate(n, () ~> { flip(weight) })
};

constrain_coin_flipper_rec = (n, trace) -> {
  trace_set(subtrace(subtrace(subtrace(trace, 1), "app"), "app"), true);
  if (n > 0) {
    constrain_coin_flipper_rec((n-1), subtrace(subtrace(subtrace(trace, 2), "app"), "app"))
  } else {
    0
  }
};

constrain_coin_flipper_trace = (n) -> {
  t1 = get_current_trace();
  constrain_coin_flipper_rec(n, subtrace(subtrace(subtrace(t1, "app"), "app"), "app"));
  t1
};

extract_weight = (mechanism) -> {
  trace_get(subtrace_at(mechanism, list(0, "def", "app")))
};

particle_sampler = (num_p) -> { () ~> {
  extract_weight(infer_resampling(flip_coins, [5], constrain_coin_flipper_trace(5), num_p))
} };

rejection_sampler = () ~> {
  extract_weight(infer_reject(flip_coins, [5], 0, constrain_coin_flipper_trace(5)))
};

analytic_sampler = () ~> {
  beta(6, 1)
};

ssrmh_sampler = (num_steps) -> { () ~> {
  t2 = get_current_trace();
  regenerate(flip_coins, [5], constrain_coin_flipper_trace(5), t2);
  beta_site = list(0, "def", "app");
  extract_weight(infer_ssrmh(flip_coins, [5], constrain_coin_flipper_trace(5), t2, list(beta_site), num_steps))
} };

p_p_plot_2samp_to_file("ssrmh.png", replicate(50, ssrmh_sampler(20)), replicate(500, analytic_sampler));

p_p_plot_2samp_to_file("particles.png", replicate(50, particle_sampler(20)), replicate(500, analytic_sampler));

p_p_plot_2samp_to_file("rejection.png", replicate(50, rejection_sampler), replicate(500, analytic_sampler));
