flip_coins = (n) ~> {
  tricky = flip(0.5);
  weight = if (tricky) {beta(1, 1)} else {exactly(0.5)};
  replicate2(n, () ~> { flip(weight) })
};

constrain_coin_flipper_trace = (n) -> {
  t1 = T{};
  for_each((k) -> {
     t1[2, creation_point(replicate2),
        k, 0, "flip"] := true
    },
    range(5));
  t1
};

extract_weight = (mechanism) -> {
  site1 = A/1/def/t/0/beta/.;
  if (mechanism[*site1] has) {
    @mechanism[*site1]
  } else {
    site2 = A/1/def/f/0/exactly/.;
    @mechanism[*site2]
  }
};

// 4 minutes at 50 samples
draw_plots = (num_samples) ~> {
  p_p_plot_2samp_to_file("particles.png",
    replicate(num_samples, particle_sampler(20)),
    replicate(num_samples, rejection_sampler));

  p_p_plot_2samp_to_file("ssrmh.png",
    replicate(num_samples, ssrmh_sampler(20)),
    replicate(num_samples, rejection_sampler))
};
