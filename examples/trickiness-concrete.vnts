// Copyright (c) 2014, 2015 MIT Probabilistic Computing Project.
//
// This file is part of Venture.
//
// Venture is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Venture is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Venture.  If not, see <http://www.gnu.org/licenses/>.

// Run me with venture puma -f trickiness-concrete.vnts

infer resample(400);
assume is_tricky = bernoulli(0.1);
assume weight = if (is_tricky) {
  uniform_continuous(0, 1)
} else {
  0.5
};
infer bind(collect(is_tricky), curry3(plotf_to_file, quote(concrete_prior_trick_mar), quote( h0)));
infer bind(collect(weight), curry3(plotf_to_file, quote(concrete_prior_weight_mar), quote(h0)));
infer bind(collect(is_tricky, weight), curry3(plotf_to_file, quote(concrete_prior_joint), quote(p0d1d)));
observe bernoulli(weight) = 1;
observe bernoulli(weight) = 1;
observe bernoulli(weight) = 1;
infer bind(collect(is_tricky), curry3(plotf_to_file, quote(concrete_obs_trick_mar), quote(h0)));
infer bind(collect(weight), curry3(plotf_to_file, quote(concrete_obs_weight_mar), quote(h0)));
infer bind(collect(is_tricky, weight), curry3(plotf_to_file, quote(concrete_obs_joint), quote(p0d1d)));
infer mh(default, one, 3);
infer bind(collect(is_tricky), curry3(plotf_to_file, quote(concrete_trick_mar), quote(h0)));
infer bind(collect(weight), curry3(plotf_to_file, quote(concrete_weight_mar), quote(h0)));
infer bind(collect(is_tricky, weight), curry3(plotf_to_file, quote(concrete_joint), quote(p0d1d)));
observe bernoulli(weight) = 1;
observe bernoulli(weight) = 1;
observe bernoulli(weight) = 1;
infer mh(default, one, 3);
infer bind(collect(is_tricky), curry3(plotf_to_file, quote(concrete_more_data_trick_mar), quote(h0)));
infer bind(collect(weight), curry3(plotf_to_file, quote(concrete_more_data_weight_mar), quote(h0)));
infer bind(collect(is_tricky, weight), curry3(plotf_to_file, quote(concrete_more_data_joint), quote(p0d1d)));
