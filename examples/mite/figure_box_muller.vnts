define simulate_std_normal = () ~> {
  u1 = uniform_continuous(0, 1);
  u2 = uniform_continuous(0, 1);
  sqrt(-2 * log(u1)) * cos(2 * 3.14159265 * u2)
};

define assess_std_normal = (x) -> {
  -0.5 * log(2 * 3.14159265) - 0.5 * x * x
};

// encapsulated as an SP:
define std_normal = make_elementary_sp([| () -> {
  let simulate_std_normal = ${simulate_std_normal};
  let assess_std_normal = ${assess_std_normal};
  dict(
    ['simulate', () -> {
      return (simulate_std_normal())
    }],
    ['log_density', (x) -> {
      return (assess_std_normal(x))
    }])
} |]);
