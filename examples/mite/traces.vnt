[define example1
  (lambda ()
    (run (do (assume slope (normal 0 1))
             (assume intercept (normal 0 1))
             (assume f (mem (lambda (x) (+ (* slope x) intercept))))
             (predict (debug 'xy (list (f 0) (f 1) (f 2) (f 1)))))
         (blank_trace)))]

[define rejection_loop
  (let ((reset_trace
         (lambda (t) (inference_action (lambda (_) (pair nil t))))))
    (lambda (prog)
      (do (t <- split_trace)
          (result <- prog)
          (consistent <- check_consistent)
          (if consistent
              (return result)
              (do (reset_trace t) (rejection_loop prog))))))]

[define example2
  (lambda ()
    (run (rejection_loop
          (do (assume theta (beta 1 1))
              (observe (flip theta) true)
              (observe (flip theta) true)
              (observe (flip theta) true)
              (observe (flip theta) true)
              (predict (debug 'theta theta))))
         (blank_trace)))]

[define example3
  (lambda ()
    (run (rejection_loop
          (do (assume theta (beta 1 1))
              (observe (binomial 100 theta) 100)
              (predict (debug 'theta theta))))
         (flat_trace)))]

